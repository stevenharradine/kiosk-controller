#!/bin/bash
set -e

function load_settings {
  source $CONFIG_FILE
}

function write_settings {
  rm $CONFIG_FILE
  echo "KIOSK_PAGE=\"$KIOSK_PAGE\"" >> $CONFIG_FILE
  echo "KIOSK_PORT=$KIOSK_PORT" >> $CONFIG_FILE
  echo "KIOSK_PYTHON_PID=$KIOSK_PYTHON_PID" >> $CONFIG_FILE
}

function check_dependencies {
  KIOSK_STATUS=0
  command -v chromium-browser >/dev/null 2>&1 || {
    echo "Missing chromium-browser"; KIOSK_STATUS=1;
  }
  return $KIOSK_STATUS
}

function stop_chrome {
  (pkill chromium && echo "Stopping existing chromium instances") || true
}

function start_chrome {
  DISPLAY=:0 nohup chromium-browser --kiosk $KIOSK_PAGE >chromium.log 2>&1 &
  echo "Starting chromium"
}

function stop_python_api {
  if ps -p $KIOSK_PYTHON_PID 2> /dev/null | grep -q "python"; then
    echo "Stopping http api at PID $KIOSK_PYTHON_PID"
    kill $KIOSK_PYTHON_PID
  fi
}

function start_python_api {
  return #api not ready yet
  nohup python3 kiosk-http-api.py $KIOSK_PORT >python-http-api.log 2>&1 &
  KIOSK_PYTHON_PID=$!
  echo "Starting http api at PID $KIOSK_PYTHON_PID"
}

function page {
  if [ "$1" == "" ]; then
    echo "No page specified"
    exit 1
  fi
  KIOSK_PAGE=$1
}

function port {
  if ! [[ "$1" =~ ^[0-9]+$ ]]; then
    echo "No valid port specified"
    exit 1
  fi
  KIOSK_PORT=$1
}

function usage {
  echo "Usage: kiosk <command> [<args>]"
  echo "Controls a Chromium kiosk mode instance"
  echo "For details on the HTTP API this exposes, consult the README"
  echo
  echo "  help                  prints this help"
  echo "  page <url>            change the Chromium page (resets on reboot)"
  echo "  page <url>  --save    change the Chromium page and persist"
  echo "  port <number>         save a new API port; does not (re)start API"
  echo "  start                 (re)starts the API server and Chromium"
  echo "  start --noapi         (re)starts just Chromium; stops API if up"
  echo "  status                prints the current page and port in JSON"
  echo "  stop                  stops the API server and Chromium"
}

# =====================================
# Settings and Initialization
# =====================================

# default values
KIOSK_PAGE="http://google.com"
KIOSK_PORT=8000
KIOSK_PYTHON_PID=0

# configuration
CONFIG_FILE=~/.pi-kiosk

# initialization
touch $CONFIG_FILE
load_settings

# start the program
if ! check_dependencies && ! [ "$1" == "help" ] ; then
  echo "Please install the missing dependencies"
  exit 1
fi

if [ "$1" == "page" ]; then
  page $2
  stop_chrome
  start_chrome
  [ "$3" == "--save" ] && write_settings
elif [ "$1" == "port" ]; then
  port $2
  write_settings
elif [ "$1" == "start" ]; then
  stop_chrome
  stop_python_api
  start_chrome
  [ "$2" != "--noapi" ] && (start_python_api && write_settings)
elif [ "$1" == "stop" ]; then
  stop_chrome
  stop_python_api
elif [ "$1" == "status" ]; then
  echo "{\"page\":\"$KIOSK_PAGE\", \"port\":\"$KIOSK_PORT\"}"
else
  usage
fi
